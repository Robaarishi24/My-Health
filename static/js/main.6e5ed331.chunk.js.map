{"version":3,"sources":["components/ListItem.js","components/Home.js","components/layout/Header.js","components/HealthyFood.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","handleChecked","setState","checked","state","className","type","onChange","this","deleteFunc","taskName","onClick","deleteItem","React","Component","Home","handleDeletState","console","log","deleteSelectedItems","deleteFunction","allItems","task","map","element","index","key","placeholder","value","newItem","onTextBoxChange","addItem","deleteAllItems","Header","to","HealthyFood","clicked","e","preventDefault","target","searchFood","componentWillMount","handleChange","axios","method","url","then","res","foodData","data","hints","catch","err","allresult","food","label","nutrients","ENERC_KCAL","App","items","id","deleted","filter","item","path","component","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6e5ed331.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class ListItem extends React.Component {\n    constructor(props){\n        super(props)\n        this.state ={\n        checked : false\n        }\n    }\n\n// the box is selected \n    handleChecked = ()=>{\n    this.setState({\n    checked : !this.state.checked\n      })\n    }\n\n\n// To delete selected items\n// deleteSelectedItem = ()=>{\n// if (this.props.selectedState){\n    // if(this.state.checked){\n    // this.setState({\n    // checked : false \n    //     })\n    // this.props.deleteItem(this.props.taskName)\n    // }\n// }\n// }\n    render(){\n        // this.deleteSelectedItem();\n        return (\n            \n            <div>    \n            <li className=\"col-11 mb-3 list-group-item  items\">\n            <input type=\"checkbox\" onChange={this.props.deleteFunc}/> \n            {this.props.taskName}\n\n            <button type=\"button\" className=\"btn-sm btn-danger delbtn\"\n             onClick={()=>this.props.deleteItem(this.props.taskName)}>\n                 Delete\n            </button>\n            </li>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ListItem from './ListItem';\n\n\nexport default class Home extends React.Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //     // selectedState : false \n    //     };\n    // }\n\n//change the state og cheackbox\n    handleDeletState = () => {\n        console.log('HANDKE DELEASTE STATE');\n        // this.setState({\n        // selectedState : true\n        // });\n        this.props.deleteSelectedItems()\n    }\n\n    render() { \n        const deleteFunction = this.props.deleteItem;\n        const allItems = this.props.task.map((element,index)=>{\n           return (\n           <div> \n               <ListItem taskName ={element} \n               key={index} \n               deleteItem={deleteFunction}\n               \n\n            //    selectedState={this.state.selectedState}\n               /> \n               </div>\n               )\n       });\n\n\n        return ( \n            <div>\n                {allItems}\n                 <form>\n          <input className = \"inputText\" \n                 type=\"text\"\n                 placeholder=\" Add Your Program !\"\n                 value={this.props.newItem}\n                 onChange={this.props.onTextBoxChange}\n                 />\n          <button type=\"button\" className=\"btn-sm btn-outline-secondary\"  \n          onClick={()=>this.props.addItem()}>Add</button>\n          <button type=\"button\" className=\"btn-sm btn-outline-danger\"  \n          onClick={()=>this.props.deleteAllItems()}>Delete All Items</button>\n\n          <button type=\"button\" className=\"btn-sm btn-outline-danger\"  \n          onClick={() =>this.handleDeletState()}>Delete Selected Items</button>\n        </form>\n            </div>\n         );\n    }\n}\n \n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n    return (\n    <header className =\"headerStyle\">\n    <h1>My health</h1>\n    <Link className =\"linkStyle\" to=\"/\">Home</Link>{\" \"}\n    <Link className =\"linkStyle\" to=\"/healthy\">Nutritional information</Link>\n         </header>\n    )\n};\nexport default  Header ;","import React from 'react'\nimport axios from 'axios';\n\nexport default class HealthyFood extends React.Component {\n  constructor(props){\nsuper(props);\nthis.state = {\n  data:[],\n  searchFood : ''\n}\n  }\n  clicked = (e) => {\n    e.preventDefault();\n    console.log(e.target.value)                                \n    this.setState({\n      searchFood : e.target.value\n    });\n    this.componentWillMount()\n  }\n\n  handleChange =(e)=>{\n    e.preventDefault();\n    console.log(e.target.value)\n    this.setState({\n      searchFood : e.target.value\n    });\n  }\n\n  componentWillMount = () =>{\n  axios({\n    method: 'get',\n    url: `https://api.edamam.com/api/food-database/parser?ingr=${this.state.searchFood}&app_id=93dabb21&app_key=9845ae1d70b3b1406888f41164a9f9f7`\n  })\n    .then(res => {\n      const foodData = res.data.hints\n      console.log('SUCC: ', foodData);\n      this.setState({\n        data:foodData,\n      })\n    })\n    .catch(err => {\n      console.log('ERROR: ', err);\n    });\n  }\n\n  render() {\n    const allresult = this.state.data.map((data , index) =>{\n      return(\n        \n        <div className=\"card\">\n    <div className=\"card-body\">\n      <h4 className=\"card-title\">Title </h4> <p>{data.food.label}</p>\n      <h4 className=\"card-text\">Kcal </h4> <p>{data.food.nutrients.ENERC_KCAL}</p>\n      \n      </div>\n    </div>\n      );\n    });\n\n    return (\n      <div>\n        <div>\n        <input type = \"text\" \n      className =\"input-search\"\n       value = {this.state.searchFood} \n       onChange = {this.handleChange} >\n       </input>\n\n      <button  \n      type=\"button\" \n      className=\"btn btn-info btn-sm search\"\n      onClick = {this.clicked}>Search</button>\n      </div>\n\n  <div className=\"card-group\">\n    {allresult}\n</div>\n</div>\n    )\n  }\n}\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\n// Import the components\nimport Home from './components/Home'\nimport Header from './components/layout/Header';\nimport HealthyFood from './components/HealthyFood';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      newItem: '',\n    }\n  }\n  \n  // Change the text in input box\n  onTextBoxChange = (e) => {\n    console.log('Text Change', e.target.value);\n    this.setState({\n      newItem: e.target.value\n    });\n  }\n       \n\n// add new items\n  addItem = (e) => {\n  // e.preventDefault();\n  console.log('Add Item!');\n  this.setState({\n    items: [...this.state.items, this.state.newItem],\n    newItem: '',\n  });\n}\n\n\n// Delete one Item\ndeleteItem = (id) => {\n  console.log(\"Item Deleted\")\n  const deleted = this.state.items.filter(item => item!==id)\n  \nthis.setState({ \n items:deleted\n});\n}\n\n// Delete All Items\ndeleteAllItems = (id) => {\n  console.log(\"Items Deleted\")\nthis.setState({ \n items:[]\n});\n}\n\n//to delete selected items \ndeleteSelectedItems = (e) => {\n  console.log('delete befire map');\n  // this.state.items.map((item, index)  =>{\n  //   console.log(item);\n    \n  // })\n}\n\n  render() { \n    return (\n        <Router>\n          <Header/>\n\n          <Route path=\"/healthy\" component={HealthyFood}/>\n\n          <Route exact path=\"/\" \n          render={ ()=>(\n         <Home \n          onTextBoxChange={this.onTextBoxChange} \n          addItem ={this.addItem} \n          newItem={this.state.newItem} \n          task={this.state.items} \n          deleteItem={this.deleteItem}\n          deleteAllItems={this.deleteAllItems}\n          deleteSelectedItems = {this.deleteSelectedItems}/>)}\n          />\n       \n        </Router> \n    );\n  }\n}\n\n \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}